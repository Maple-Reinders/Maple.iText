// <auto-generated/>
#if NETSTANDARD2_0

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace iText.Commons.Utils
{
    public partial class ComplexStructureContext
    {
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::iText.Commons.Utils.JsonUtilTest.GrandsonComplexStructure[]>? _GrandsonComplexStructureArray;
        
        /// <summary>
        /// Defines the source generated JSON serialization contract metadata for a given type.
        /// </summary>
        #nullable disable annotations // Marking the property type as nullable-oblivious.
        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::iText.Commons.Utils.JsonUtilTest.GrandsonComplexStructure[]> GrandsonComplexStructureArray
        #nullable enable annotations
        {
            get => _GrandsonComplexStructureArray ??= (global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::iText.Commons.Utils.JsonUtilTest.GrandsonComplexStructure[]>)Options.GetTypeInfo(typeof(global::iText.Commons.Utils.JsonUtilTest.GrandsonComplexStructure[]));
        }
        
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::iText.Commons.Utils.JsonUtilTest.GrandsonComplexStructure[]> Create_GrandsonComplexStructureArray(global::System.Text.Json.JsonSerializerOptions options)
        {
            if (!TryGetTypeInfoForRuntimeCustomConverter<global::iText.Commons.Utils.JsonUtilTest.GrandsonComplexStructure[]>(options, out global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::iText.Commons.Utils.JsonUtilTest.GrandsonComplexStructure[]> jsonTypeInfo))
            {
                var info = new global::System.Text.Json.Serialization.Metadata.JsonCollectionInfoValues<global::iText.Commons.Utils.JsonUtilTest.GrandsonComplexStructure[]>
                {
                    ObjectCreator = null,
                    SerializeHandler = GrandsonComplexStructureArraySerializeHandler
                };
                
                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateArrayInfo<global::iText.Commons.Utils.JsonUtilTest.GrandsonComplexStructure>(options, info);
                jsonTypeInfo.NumberHandling = null;
            }
        
            jsonTypeInfo.OriginatingResolver = this;
            return jsonTypeInfo;
        }

        // Intentionally not a static method because we create a delegate to it. Invoking delegates to instance
        // methods is almost as fast as virtual calls. Static methods need to go through a shuffle thunk.
        private void GrandsonComplexStructureArraySerializeHandler(global::System.Text.Json.Utf8JsonWriter writer, global::iText.Commons.Utils.JsonUtilTest.GrandsonComplexStructure[]? value)
        {
            if (value is null)
            {
                writer.WriteNullValue();
                return;
            }
            
            writer.WriteStartArray();

            for (int i = 0; i < value.Length; i++)
            {
                GrandsonComplexStructureSerializeHandler(writer, value[i]);
            }

            writer.WriteEndArray();
        }
    }
}
#endif