// <auto-generated/>
#if NETSTANDARD2_0

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace iText.Commons.Utils
{
    public partial class ComplexStructureContext
    {
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::iText.Commons.Utils.JsonUtilTest.ChildInComplexStructure>? _ChildInComplexStructure;
        
        /// <summary>
        /// Defines the source generated JSON serialization contract metadata for a given type.
        /// </summary>
        #nullable disable annotations // Marking the property type as nullable-oblivious.
        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::iText.Commons.Utils.JsonUtilTest.ChildInComplexStructure> ChildInComplexStructure
        #nullable enable annotations
        {
            get => _ChildInComplexStructure ??= (global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::iText.Commons.Utils.JsonUtilTest.ChildInComplexStructure>)Options.GetTypeInfo(typeof(global::iText.Commons.Utils.JsonUtilTest.ChildInComplexStructure));
        }
        
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::iText.Commons.Utils.JsonUtilTest.ChildInComplexStructure> Create_ChildInComplexStructure(global::System.Text.Json.JsonSerializerOptions options)
        {
            if (!TryGetTypeInfoForRuntimeCustomConverter<global::iText.Commons.Utils.JsonUtilTest.ChildInComplexStructure>(options, out global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::iText.Commons.Utils.JsonUtilTest.ChildInComplexStructure> jsonTypeInfo))
            {
                var objectInfo = new global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::iText.Commons.Utils.JsonUtilTest.ChildInComplexStructure>
                {
                    ObjectCreator = () => new global::iText.Commons.Utils.JsonUtilTest.ChildInComplexStructure(),
                    ObjectWithParameterizedConstructorCreator = null,
                    PropertyMetadataInitializer = _ => ChildInComplexStructurePropInit(options),
                    ConstructorParameterMetadataInitializer = null,
                    ConstructorAttributeProviderFactory =  () => typeof(global::iText.Commons.Utils.JsonUtilTest.ChildInComplexStructure).GetConstructor(InstanceMemberBindingFlags, binder: null, global::System.Array.Empty<global::System.Type>(), modifiers: null),
                    SerializeHandler = ChildInComplexStructureSerializeHandler,
                };
                
                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateObjectInfo<global::iText.Commons.Utils.JsonUtilTest.ChildInComplexStructure>(options, objectInfo);
                jsonTypeInfo.NumberHandling = null;
            }
        
            jsonTypeInfo.OriginatingResolver = this;
            return jsonTypeInfo;
        }

        private static global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] ChildInComplexStructurePropInit(global::System.Text.Json.JsonSerializerOptions options)
        {
            var properties = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[2];

            var info0 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string[]>
            {
                IsProperty = false,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::iText.Commons.Utils.JsonUtilTest.ChildInComplexStructure),
                Converter = null,
                Getter =  obj => ((global::iText.Commons.Utils.JsonUtilTest.ChildInComplexStructure)obj).arrayStr,
                Setter =  (obj, value) => ((global::iText.Commons.Utils.JsonUtilTest.ChildInComplexStructure)obj).arrayStr = value!,
                IgnoreCondition = null,
                HasJsonInclude = true,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "arrayStr",
                JsonPropertyName = null,
                AttributeProviderFactory =  () => typeof(global::iText.Commons.Utils.JsonUtilTest.ChildInComplexStructure).GetField("arrayStr", InstanceMemberBindingFlags),
            };
            
            properties[0] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string[]>(options, info0);

            var info1 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::iText.Commons.Utils.JsonUtilTest.GrandsonComplexStructure[]>
            {
                IsProperty = false,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::iText.Commons.Utils.JsonUtilTest.ChildInComplexStructure),
                Converter = null,
                Getter =  obj => ((global::iText.Commons.Utils.JsonUtilTest.ChildInComplexStructure)obj).grandsons,
                Setter =  (obj, value) => ((global::iText.Commons.Utils.JsonUtilTest.ChildInComplexStructure)obj).grandsons = value!,
                IgnoreCondition = null,
                HasJsonInclude = true,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "grandsons",
                JsonPropertyName = null,
                AttributeProviderFactory =  () => typeof(global::iText.Commons.Utils.JsonUtilTest.ChildInComplexStructure).GetField("grandsons", InstanceMemberBindingFlags),
            };
            
            properties[1] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::iText.Commons.Utils.JsonUtilTest.GrandsonComplexStructure[]>(options, info1);

            return properties;
        }

        // Intentionally not a static method because we create a delegate to it. Invoking delegates to instance
        // methods is almost as fast as virtual calls. Static methods need to go through a shuffle thunk.
        private void ChildInComplexStructureSerializeHandler(global::System.Text.Json.Utf8JsonWriter writer, global::iText.Commons.Utils.JsonUtilTest.ChildInComplexStructure? value)
        {
            if (value is null)
            {
                writer.WriteNullValue();
                return;
            }
            
            writer.WriteStartObject();

            writer.WritePropertyName(PropName_arrayStr);
            StringArraySerializeHandler(writer, ((global::iText.Commons.Utils.JsonUtilTest.ChildInComplexStructure)value).arrayStr);
            writer.WritePropertyName(PropName_grandsons);
            GrandsonComplexStructureArraySerializeHandler(writer, ((global::iText.Commons.Utils.JsonUtilTest.ChildInComplexStructure)value).grandsons);

            writer.WriteEndObject();
        }
    }
}
#endif